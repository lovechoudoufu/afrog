import{a4 as u,aq as f,a3 as c,g as p}from"./CitxP-cn.js";class o extends Error{}o.prototype.name="InvalidTokenError";function g(e){return decodeURIComponent(atob(e).replace(/(.)/g,(t,r)=>{let n=r.charCodeAt(0).toString(16).toUpperCase();return n.length<2&&(n="0"+n),"%"+n}))}function h(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return g(t)}catch{return atob(t)}}function k(e,t){if(typeof e!="string")throw new o("Invalid token specified: must be a string");t||(t={});const r=t.header===!0?0:1,n=e.split(".")[r];if(typeof n!="string")throw new o(`Invalid token specified: missing part #${r+1}`);let d;try{d=h(n)}catch(s){throw new o(`Invalid token specified: invalid base64 for part #${r+1} (${s.message})`)}try{return JSON.parse(d)}catch(s){throw new o(`Invalid token specified: invalid json for part #${r+1} (${s.message})`)}}const i="jwt_token";function w(e){localStorage.setItem(i,e)}function m(){return localStorage.getItem(i)}function v(){localStorage.removeItem(i)}function l(){const e=m();if(!e)return!1;try{return!(k(e).exp*1e3<Date.now())}catch(t){return console.error("Invalid token:",t),!1}}let a=u(f(l()));function I(e){w(e),c(a,!0)}function b(){v(),c(a,!1)}const y={get authenticated(){return p(a)},setToken:I,removeToken:b};window.addEventListener("storage",e=>{e.key==="jwt_token"&&c(a,l(),!0)});export{y as a,m as g};
