import{g as i,a as u}from"./0cZahikN.js";const p="/api";class o extends Error{constructor(e,t,s){super(s),this.status=e,this.response=t,this.name="ApiError"}}class l{baseUrl;constructor(e=p){this.baseUrl=e}async request(e,t={}){const s=`${this.baseUrl}${e}`,n=i(),a={headers:{"Content-Type":"application/json",...t.headers},...t};n&&(a.headers={...a.headers,Authorization:`Bearer ${n}`});try{const r=await fetch(s,a);if(r.status===401)throw u.removeToken(),new o(401,null,"登录过期，请重新登录");if(!r.ok){const c=await r.json().catch(()=>({}));throw new o(r.status,c,c.message||`HTTP ${r.status}: ${r.statusText}`)}return await r.json()}catch(r){throw r instanceof o?r:new o(0,null,"网络错误，请检查连接后重试")}}post(e,t){return this.request(e,{method:"POST",body:t?JSON.stringify(t):void 0})}get(e){return this.request(e,{method:"GET"})}getWithOptions(e,t){return this.request(e,{method:"GET",...t||{}})}postWithOptions(e,t,s){return this.request(e,{method:"POST",body:t?JSON.stringify(t):void 0,...s||{}})}delete(e){return this.request(e,{method:"DELETE"})}async login(e){return this.post("/login",{password:e})}async loadVulns(){return this.get("/vulns")}async loadPocsStats(){return this.get("/pocs/stats")}async loadReports(e){const t=new URLSearchParams;e?.page&&t.set("page",String(e.page)),e?.page_size&&t.set("page_size",String(e.page_size)),e?.keyword&&t.set("keyword",e.keyword),e?.severity&&t.set("severity",e.severity);const s=t.toString()?`/reports?${t.toString()}`:"/reports";return this.get(s)}async getReportDetail(e,t={expand:"all"}){const s=new URLSearchParams;t.expand&&s.set("expand",t.expand);const n=`/reports/detail/${e}${s.toString()?"?"+s.toString():""}`;return this.get(n)}async getPocYamlContent(e){try{const t=await fetch(`${this.baseUrl}/pocs/yaml/${e}`,{method:"GET",headers:{Authorization:`Bearer ${i()}`,"Content-Type":"application/json"}});if(!t.ok)throw new o(t.status,null,`HTTP ${t.status}`);return{success:!0,message:"POC YAML内容获取成功",data:await t.text()}}catch(t){throw t instanceof o?t:new o(0,t,"网络错误，请检查连接后重试")}}async getPocContent(e){try{const t=await fetch(`${this.baseUrl}/reports/poc/${e}`,{method:"GET",headers:{Authorization:`Bearer ${i()}`,"Content-Type":"application/json"}});if(!t.ok)throw new o(t.status,null,`HTTP ${t.status}`);return{success:!0,message:"POC内容获取成功",data:await t.text()}}catch(t){throw t instanceof o?t:new o(0,t,"网络错误，请检查连接后重试")}}async createPoc(e){return this.post("/pocs/create",e)}async updatePoc(e,t){return this.post(`/pocs/update/${e}`,t)}async deletePoc(e){return this.delete(`/pocs/${e}`)}async validatePoc(e){return this.post("/pocs/validate",e)}}const y=new l;export{o as A,y as a};
