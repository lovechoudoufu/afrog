const h="/api";class n extends Error{constructor(t,e,r){super(r),this.status=t,this.response=e,this.name="ApiError"}}class u{baseUrl;constructor(t=h){this.baseUrl=t}async request(t,e={}){const r=`${this.baseUrl}${t}`,o={headers:{"Content-Type":"application/json",...e.headers},...e},a=localStorage.getItem("jwt_token");a&&(o.headers={...o.headers,Authorization:`Bearer ${a}`});try{const s=await fetch(r,o);if(!s.ok){const i=await s.json().catch(()=>({}));throw new n(s.status,i,i.message||`HTTP ${s.status}: ${s.statusText}`)}return await s.json()}catch(s){throw s instanceof n?s:new n(0,null,"网络错误，请检查连接后重试")}}post(t,e){return this.request(t,{method:"POST",body:e?JSON.stringify(e):void 0})}get(t){return this.request(t,{method:"GET"})}async login(t){return this.post("/login",{password:t})}async loadVulns(){return this.get("/vulns")}}const l=new u;export{n as A,l as a};
